apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd
  labels:
    app: fluentd
spec:
  selector:
    matchLabels:
      app: fluentd
  template:
    metadata:
      labels:
        app: fluentd
    spec:
      serviceAccount: fluentd
      serviceAccountName: fluentd
      containers:
      - name: fluentd
        image: fluent/fluentd-kubernetes-daemonset:v1-debian-elasticsearch8
        env:
          - name:  FLUENT_ELASTICSEARCH_HOST
            value: "elasticsearch.{{ efk_namespace }}.svc.cluster.local"
          - name:  FLUENT_ELASTICSEARCH_PORT
            value: "9200"
          - name: FLUENT_ELASTICSEARCH_SCHEME
            value: "http"
          - name: FLUENTD_SYSTEMD_CONF
            value: disable
          - name: FLUENT_CONTAINER_TAIL_EXCLUDE_PATH
            value: /var/log/containers/fluent*
          - name: FLUENT_CONTAINER_TAIL_PARSER_TIME_FORMAT
            # This parametr doesn't work as expected with timezone regexp, so we set it with Ansible  
            value: "%Y-%m-%dT%H:%M:%S.%N{{ efk_timezone }}"
          - name: FLUENT_CONTAINER_TAIL_PARSER_TYPE
            # Parser type for containerd runtime
            value: '/^(?<time>.+) (?<stream>stdout|stderr)( (?<logtag>.))? (?<log>.*)$/'
          - name: FLUENT_ELASTICSEARCH_BUFFER_CHUNK_LIMIT_SIZE
            value: "10M"
          - name: FLUENT_ELASTICSEARCH_BUFFER_FLUSH_INTERVAL
            value: "1s"
          - name: FLUENT_ELASTICSEARCH_BUFFER_QUEUE_LIMIT_LENGTH
            value: "16"
        resources:
          limits:
            memory: "{{ efk_fluentdMemoryLimit }}"
          requests:
            cpu: "{{ efk_fluentdCpuLimit }}"
            memory: "{{ efk_fluentdMemoryRequest }}"
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd
roleRef:
  kind: ClusterRole
  name: fluentd
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: fluentd
  namespace: "{{ efk_namespace }}"
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluentd
  labels:
    app: fluentd
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - list
  - watch
---  

apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
